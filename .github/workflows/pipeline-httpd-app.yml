name: Build Application HTTPD

on:
  push:
    branches:
      - "*"
    tags:
      - "*.*.*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-httpd-app

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Export Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./httpd-app
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=${{ runner.temp }}/image.tar

      - name: Save Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: image
          path: ${{ runner.temp }}/image.tar

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./php-app

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: image
          path: ${{ runner.temp }}

      - name: Load Docker image from artifact
        run: docker load --input ${{ runner.temp }}/image.tar

      - name: Push Docker image
        run: docker push --all-tags ghcr.io/${{ env.IMAGE_NAME }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ghcr.io/${{ github.repository }}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
